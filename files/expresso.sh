#!/bin/bash

# =====================
# expresso.sh - Instala√ß√£o e configura√ß√£o automatizada para laborat√≥rio
# =====================

#Instala pacotes b√°sicos
bash auto_install.sh
#Download
wget -P / 'http://192.168.100.64/downloads/liu_expresso.tgz'
#Extra√ß√£o
tar -xvf /liu_expresso.tgz

#Cria√ß√£o de usu√°rios
bash user_conf.sh aluno aluno #Criando aluno padr√£o

# Alterando dnsmasq
echo "‚öôÔ∏è Alterando configura√ß√£o do dnsmasq..."

NET_FILE="tmp/network_data.txt"
CONF_FILE="/etc/dnsmasq.d/ltsp-dnsmasq.conf"

bash network.sh

if [[ ! -f "$NET_FILE" ]]; then
    echo "‚ùå Arquivo $NET_FILE n√£o encontrado. Execute primeiro: bash network.sh"
    exit 1
fi

echo "üìñ Lendo informa√ß√µes de rede do arquivo $NET_FILE..."

IP_CIDR=$(grep "IP Address" "$NET_FILE" | awk -F': ' '{print $2}')
NETMASK=$(grep "Netmask" "$NET_FILE" | awk -F': ' '{print $2}')
GATEWAY=$(grep "Gateway" "$NET_FILE" | awk -F': ' '{print $2}')

IP=$(echo "$IP_CIDR" | cut -d'/' -f1)
CIDR=$(echo "$IP_CIDR" | cut -d'/' -f2)

if ! command -v ipcalc &>/dev/null; then
    echo "‚ùå O utilit√°rio 'ipcalc' n√£o est√° instalado. Instale com: apt install ipcalc"
    exit 1
fi

REDE=$(ipcalc "$IP/$CIDR" | grep "Network:" | awk '{print $2}' | cut -d'/' -f1)

echo "‚ÑπÔ∏è Informa√ß√µes extra√≠das:"
echo "   - Endere√ßo de Rede: $REDE"
echo "   - M√°scara: $NETMASK"
echo "   - Gateway: $GATEWAY"

echo "üìù Criando backup do arquivo de configura√ß√£o..."

# Diret√≥rio de backup
BKP_DIR="/etc/dnsmasq.d/bkp"
mkdir -p "$BKP_DIR"

# Copiando arquivo de configura√ß√£o para o diret√≥rio de backup
cp "$CONF_FILE" "$BKP_DIR/$(basename "$CONF_FILE").bak"
echo "‚úÖ Backup criado em $BKP_DIR/$(basename "$CONF_FILE").bak"

echo "‚úèÔ∏è Atualizando configura√ß√£o do dnsmasq..."
sed -i "s|dhcp-range=set:proxy,.*|dhcp-range=set:proxy,${REDE},proxy,${NETMASK}|" "$CONF_FILE"
sed -i "s|dhcp-option=option:router,.*|dhcp-option=option:router,${GATEWAY}|" "$CONF_FILE"
echo "‚úÖ Configura√ß√£o de $CONF_FILE atualizada."

# Reiniciando servi√ßos
echo "üîÑ Reiniciando servi√ßos..."
bash reinicia.sh
if [[ $? -ne 0 ]]; then
    echo "‚ùå Falha ao reiniciar servi√ßos."
    exit 1
fi
echo "‚úÖ Servi√ßos reiniciados."
#Reiniciando servi√ßos
bash reinicia.sh

#PRONTO!
